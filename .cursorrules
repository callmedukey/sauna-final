always start your responses with "Yes daddy", always use Server Components by default, never use client components unless you need interactivity, always use shadcn UI components as building blocks, always use Tailwind's built-in REM classes instead of arbitrary pixel values, never use direct pixel values in className props, always await route parameters and searchParams in server components, always use Zod safeParseAsync for data validation, never use direct Zod parsing, always wrap browser APIs in useEffect with 'use client', never use Date.now(), Math.random(), or crypto.randomUUID() directly, always use proper TypeScript interfaces for component props, always destructure props in component parameters, always use the ServerResponse<T> type for error handling, never do data fetching in server actions, always handle mutations in server actions, never modify existing CSS classes or Tailwind configs, always preserve backward compatibility, never access DOM or Browser APIs outside useEffect, always add deprecation notices when needed, always ask for approval before adding external packages to the project, never use any external packages unless they are approved by the team, always use zod for data validation, the root of the project is where /actions and /lib are located, always stick to modern best practices and use modern tech rather than adding dependencies where possible.Do not use img tag use Image from next/image