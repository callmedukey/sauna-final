datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

enum Role {
  USER
  ADMIN
}

enum RoomType {
  MEN60
  MEN60WEEKEND
  MEN90
  MEN90WEEKEND
  WOMEN60
  WOMEN60WEEKEND
  WOMEN90
  WOMEN90WEEKEND
  FAMILY100
  FAMILY100WEEKEND
}

model VerificationEmail {
  id        String   @id @default(uuid())
  email     String   @unique
  code      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
}

model VerificationSMS {
  id        String   @id @default(uuid())
  phone     String   @unique
  code      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  @unique
}

model User {
  id          String  @id @default(uuid())
  deactivated Boolean @default(false)
  name        String
  phone       String  @unique
  email       String  @unique
  password    String

  role Role @default(USER)

  verificationEmailId String?
  verificationEmail   VerificationEmail?
  verificationSMSId   String?
  verificationSMS     VerificationSMS?

  reservations Reservation[]

  point Int @default(3000)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Reservation {
  id String @id @default(uuid())

  canceled Boolean @default(false)
  women    Int     @default(0)
  men      Int     @default(0)
  children Int     @default(0)
  infants  Int     @default(0)

  roomType RoomType

  time String
  date String

  message String?

  usedPoint Int @default(0)
  price     Int
  paidPrice Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String
}
